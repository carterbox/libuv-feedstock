{% set version = "1.46.0" %}
{% set so_major = "1" %}
{% set library = "Library/" if (target_platform == "win-64") else "" %}

package:
  name: libuv-split
  version: {{ version }}

source:
  url: https://github.com/libuv/libuv/archive/v{{ version }}.tar.gz
  sha256: 7aa66be3413ae10605e1f5c9ae934504ffe317ef68ea16fdaa83e23905c681bd
  patches:
    # linux.c:1638:21: error: 'CLOCK_BOOTTIME' undeclared
    - boottime.patch

build:
  number: 1

requirements:
  build:
    - {{ compiler('c') }}
    - automake             # [unix]
    - autoconf             # [unix]
    - libtool              # [unix]
    - make                 # [unix]
    - sed                  # [osx]
    - cmake                # [win]
    - ninja                # [win]

outputs:

  - name: libuv
    build:
      run_exports:
        - {{ pin_subpackage('libuv' ~ so_major) }}
    requirements:
      build:
        - {{ compiler('c') }}
      host:
        - {{ pin_subpackage('libuv' ~ so_major, exact=True) }}
      run:
        - {{ pin_subpackage('libuv' ~ so_major, exact=True) }}
    files:
      - {{ library }}include/uv.h
      - {{ library }}include/uv
      - {{ library }}lib/libuv{{ SHLIB_EXT }}  # [unix]
      - {{ library }}lib/uv.lib  # [win]
      - {{ library }}lib/pkgconfig/libuv.pc
      - {{ library }}lib/cmake/libuv
    test:
      commands:
      # Needed
        - test -f "$PREFIX/include/uv.h"    # [unix]
        - test -f "$PREFIX/lib/libuv.so.1"  # [linux]
        - test -f "$PREFIX/lib/libuv.1.dylib"  # [osx]
        - test -f "$PREFIX/lib/libuv${SHLIB_EXT}"  # [not win]
        - test -f "$PREFIX/lib/pkgconfig/libuv.pc"  # [not win]
        - if not exist %LIBRARY_INC%\uv.h (exit 1)      # [win]
        - if not exist %LIBRARY_LIB%\uv.lib (exit 1)    # [win]
        - if not exist %LIBRARY_BIN%\uv.dll (exit 1)    # [win]
        - if not exist %LIBRARY_LIB%\pkgconfig/libuv.pc (exit 1)         # [win]
      # Excluded
        - test ! -f "$PREFIX/lib/libuv.a"     # [unix]

  - name: libuv-static
    files:
      - {{ library }}lib/libuv.a  # [unix]
      - {{ library }}lib/libuv.lib  # [win]
      - {{ library }}lib/pkgconfig/libuv-static.pc
    test:
      commands:
        - test -f "$PREFIX/lib/libuv.a"  # [unix]
        - if not exist %LIBRARY_LIB%\libuv.lib (exit 1)    # [win]
        - if not exist %LIBRARY_LIB%\pkgconfig/libuv-static.pc (exit 1)  # [win]

  - name: libuv{{ so_major }}
    build:
      run_exports:
        - {{ pin_subpackage('libuv' ~ so_major) }}
    requirements:
      build:
        - {{ compiler('c') }}
      run:
        - {{ pin_subpackage('_libuv_api', max_pin='x.x.x') }}               # [win]
    files:
      - {{ library }}lib/libuv.so.{{ so_major }}*                    # [linux]
      - {{ library }}lib/libuv.{{ so_major }}*.dylib                 # [osx]
      - {{ library }}bin/uv.dll                                      # [win]
    test:
      commands:
        - test -f "$PREFIX/lib/libuv.so.1"  # [linux]
        - test -f "$PREFIX/lib/libuv.1.dylib"  # [osx]
        - if not exist %LIBRARY_BIN%\uv.dll (exit 1)  # [win]

  # Clobber preventer for Windows; prevents multiple dll files from being
  # installed simultaneously. This lets us avoid exporting a strict pin on the
  # API which is not strictly correlated with the ABI.
  - name: _libuv_api
    build:
      skip: true  # [not win]
    about:
      summary: >
        An empty package that prevents multiple ABIs being installed
        simultaneously on Windows.

about:
  home: http://libuv.org/
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Cross-platform asynchronous I/O
  description: |
    libuv is a multi-platform support library with a focus on asynchronous I/O.
    It was primarily developed for use by Node.js, but it's also used by Luvit,
    Julia, pyuv, and others.
  doc_url: http://docs.libuv.org/
  dev_url: https://github.com/libuv/libuv

extra:
  recipe-maintainers:
    - frol
    - mariusvniekerk
  feedstock-name: libuv
